
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.11.1
 * Query Engine version: f40f79ec31188888a2e33acda0ecc8fd10a853a9
 */
Prisma.prismaVersion = {
  client: "6.11.1",
  engine: "f40f79ec31188888a2e33acda0ecc8fd10a853a9"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.JobMelaBeneficiaryScalarFieldEnum = {
  id: 'id',
  registration_number: 'registration_number',
  full_name: 'full_name',
  dob: 'dob',
  gender: 'gender',
  mobile_number: 'mobile_number',
  email_address: 'email_address',
  current_address: 'current_address',
  pincode: 'pincode',
  highest_qualification: 'highest_qualification',
  other_qualification: 'other_qualification',
  year_of_passing: 'year_of_passing',
  expected_year_of_completion: 'expected_year_of_completion',
  overall_percentage: 'overall_percentage',
  tenth_board: 'tenth_board',
  twelfth_board: 'twelfth_board',
  education_stream: 'education_stream',
  work_experience: 'work_experience',
  other_stream: 'other_stream',
  areas_of_interest: 'areas_of_interest',
  specific_skills: 'specific_skills',
  currently_enrolled: 'currently_enrolled',
  completed_skill_program: 'completed_skill_program',
  preferred_sectors: 'preferred_sectors',
  preferred_location: 'preferred_location',
  open_to_out_of_state: 'open_to_out_of_state',
  payment_confired: 'payment_confired',
  payment_waiver_reason: 'payment_waiver_reason',
  status: 'status',
  prior_experience: 'prior_experience',
  has_resume: 'has_resume',
  additional_info: 'additional_info',
  has_iti: 'has_iti',
  has_diploma: 'has_diploma',
  other_iti_trade: 'other_iti_trade',
  other_diploma_stream: 'other_diploma_stream',
  has_experience: 'has_experience',
  currently_working: 'currently_working',
  experience_company_name: 'experience_company_name',
  experience_years: 'experience_years',
  current_company_name: 'current_company_name',
  current_year_of_joining: 'current_year_of_joining',
  has_appointment_letter: 'has_appointment_letter',
  has_salary_slip: 'has_salary_slip',
  has_relieving_letter: 'has_relieving_letter',
  all_data_verified: 'all_data_verified',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JobMelaBeneficiaryOrderByRelevanceFieldEnum = {
  registration_number: 'registration_number',
  full_name: 'full_name',
  gender: 'gender',
  mobile_number: 'mobile_number',
  email_address: 'email_address',
  current_address: 'current_address',
  pincode: 'pincode',
  highest_qualification: 'highest_qualification',
  other_qualification: 'other_qualification',
  year_of_passing: 'year_of_passing',
  expected_year_of_completion: 'expected_year_of_completion',
  overall_percentage: 'overall_percentage',
  tenth_board: 'tenth_board',
  twelfth_board: 'twelfth_board',
  education_stream: 'education_stream',
  work_experience: 'work_experience',
  other_stream: 'other_stream',
  areas_of_interest: 'areas_of_interest',
  specific_skills: 'specific_skills',
  currently_enrolled: 'currently_enrolled',
  completed_skill_program: 'completed_skill_program',
  preferred_sectors: 'preferred_sectors',
  preferred_location: 'preferred_location',
  payment_waiver_reason: 'payment_waiver_reason',
  prior_experience: 'prior_experience',
  additional_info: 'additional_info',
  other_iti_trade: 'other_iti_trade',
  other_diploma_stream: 'other_diploma_stream',
  experience_company_name: 'experience_company_name',
  experience_years: 'experience_years',
  current_company_name: 'current_company_name',
  current_year_of_joining: 'current_year_of_joining'
};


exports.Prisma.ModelName = {
  JobMelaBeneficiary: 'JobMelaBeneficiary'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
